package com.example.demo.service.imp;

import java.util.Optional;

import javax.management.RuntimeErrorException;
import javax.transaction.Transactional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.example.demo.dto.NoteDTO;
import com.example.demo.entity.NoteEntity;
import com.example.demo.mapper.NoteMapper;
import com.example.demo.repository.NoteRepository;
import com.example.demo.service.NoteService;

@Component
public class NoteServiceImp implements NoteService {
	@Autowired
	NoteMapper noteMapper;
	@Autowired
	NoteRepository noteRepository;
    
	@Transactional
	@Override
	public NoteDTO save(NoteDTO dto, Long id) {
		dto.setUserid(id);
		NoteEntity entity= noteMapper.noteDTO2Entity(dto);
		entity=noteRepository.save(entity);
		NoteDTO response=noteMapper.noteEntity2DTO(entity);
		return response;
	}
	@Transactional
	@Override
	public void delete(Long id) {
			noteRepository.deleteById(id);
		}
	@Override
	public NoteDTO update(Long id, NoteDTO dto) {
		 Optional<NoteEntity>note= noteRepository.findById(id);
		 if(!note.isPresent()) {
			 throw new RuntimeException("id invalido");
		 }
		 NoteEntity entity= note.get();
		 return noteMapper.update(entity,dto);
		
	}

}
